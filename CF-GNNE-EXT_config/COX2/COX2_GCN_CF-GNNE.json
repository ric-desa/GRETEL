{  
    "experiment": {
        "scope": "COX2/CFGNNE",
        "parameters": {
            "lock_release_tout":120,
            "propagate":[
                {"in_sections" : ["explainers"], "params": {"fold_id":1}},
                {"in_sections" : ["do-pairs/oracle"], "params": {"fold_id": -1}},
                {"in_sections": ["do-pairs/dataset"],"params": 
                    { "manipulators" : [
                        { "class": "src.dataset.manipulators.causality.Causality", "parameters": {} },
                        { "class": "src.dataset.manipulators.centralities.NodeCentrality", "parameters": {} }    
                        ] 
                    }
                }
            ],
            "expand" : {  "folds" : [ "explainers"], "triplets" : true } 
        }
    },

    "do-pairs":[ {
        "dataset": {
            "class": "src.dataset.dataset_base.Dataset",
            "parameters": {
                "generator": {
                    "class": "src.dataset.generators.TUDataset.TUDataset",
                    "parameters": { "alias": "COX2" }
                }
            }
        },
        "oracle": {
            "class": "src.oracle.nn.torch.OracleTorch",
            "parameters": {
                "epochs": 50,
                "batch_size": 32,
                "early_stopping_threshold":1e-4,
                "optimizer": {
                    "class": "torch.optim.RMSprop",
                    "parameters": {
                        "lr":0.01
                    }
                },
                "loss_fn": {
                    "class": "torch.nn.CrossEntropyLoss",
                    "parameters": {     
                    "reduction":"mean"
                    }
                },
                "model": {
                    "class": "src.oracle.nn.gcn.DownstreamGCN",
                    "parameters": {"num_conv_layers":3,"num_dense_layers":1,"conv_booster":2,"linear_decay":1.8}
                }
            }   
        }
    } ],
    "explainers": [ 
        {"class": "src.explainer.generative.cfgnn.CFGNNExplainer_Ext",
          "parameters": {
            "alpha": 0.1, 
            "K": 500, 
            "beta": 0.5, 
            "extended": false,
            "update_node_feat": false,            
            "change_node_feat": false
            }
        }
    ],
    "compose_mes" : "config/snippets/default_metrics.json",
    "compose_strs" : "config/snippets/default_store_paths.json"
}